name: Deploy to ECR - Image based # Name of the workflow
on:
  push:
    branches: [ master ] # Trigger workflow on git push to main branch
  workflow_dispatch: # Allow manual invocation of the workflow
jobs:  
  deploy:
    runs-on: ubuntu-latest
    
    steps:      
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          
      - name: Configure AWS credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}     

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1        

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dotnetapp-dev
          IMAGE_TAG: latest
          working-directory: dotnetapp-dev/
        run: |
          cd dotnetapp-dev/
          docker build --target testrunner -t dotnetapp-dev:latest .
          docker run --rm -v "$(pwd)"/TestResults:/app/tests/TestResults dotnetapp-dev:latest
          
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 755247318680.dkr.ecr.us-east-1.amazonaws.com
          docker tag dotnetapp-dev:latest 755247318680.dkr.ecr.us-east-1.amazonaws.com/dotnetapp-dev:latest
          docker push 755247318680.dkr.ecr.us-east-1.amazonaws.com/dotnetapp-dev:latest
        
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  
